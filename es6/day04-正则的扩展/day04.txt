正则的扩展

1.	回顾正则知识
	正则表达式是由一个字符序列形成的搜索模式。
	当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。
	正则表达式可以是一个简单的字符，或一个更复杂的模式。
	正则表达式可用于所有文本搜索和文本替换的操作。

	var patt = /runoob/i
	/runoob/i  是一个正则表达式。runoob  是一个正则表达式主体 (用于检索)。i  是一个修饰符 (搜索不区分大小写)。
	1.1 字符串方法
		在 JavaScript 中，正则表达式通常用于两个字符串方法 : search() 和 replace()。
		search() 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。
		replace() 方法 用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。
	1.2	正则表达式修饰符
		i	执行对大小写不敏感的匹配。
		g	执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。
		m	执行多行匹配。
	1.3	正则表达式修饰符
		方括号用于查找某个范围内的字符：
			[abc]	查找方括号之间的任何字符。
			[0-9]	查找任何从 0 至 9 的数字。
			(x|y)	查找任何以 | 分隔的选项。
		元字符是拥有特殊含义的字符：
			\d	查找数字。
			\s 	查找空白字符。
			\b	匹配单词边界
			\uxxxx	查找以十六进制数 xxxx 规定的 Unicode 字符。
		量词:
			n+	匹配任何包含至少一个 n 的字符串。
			n*	匹配任何包含零个或多个 n 的字符串。
			n?	匹配任何包含零个或一个 n 的字符串。
	1.4	使用 RegExp 对象
		test():用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。
		/de/.test('lideyao')
		exec():用于检索字符串中的正则表达式的匹配。该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。
	正则表达式
	RegExp构造函数第一个参数为正则表达式的文本内容,而第一个参数则为可选项标志.标志可以组合使用。
	g（全文查找） i（忽略大小写） m（多行查找）

2.	ES6正则的扩展
	2.1	u修饰符
		ES6 对正则表达式添加了u修饰符，含义为“Unicode 模式”，用来正确处理大于\uFFFF的 Unicode 字符。也就是说，会正确处理四个字节的 UTF-16 编码。
		

	


	




